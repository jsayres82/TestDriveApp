@model dynamic
@{
    ViewBag.Title = "New Test Drive Form";
}
<h2>New Test Drive Form</h2>
<form id="newTestDrive">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label>Vehicle</label>
        <div class="tt-container">
            <input id="vehicle" name="vehicle" data-rule-atLeastOneMovie="true" type="text" value="" class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <ul id="vehicle" class="list-group"></ul>
        </div>
    </div>
    <button class="btn btn-primary">Submit</button>
</form>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");
    <script>
        $(document)
            .ready(function() {
                var vm = {
                    vehicleIds: []
                };

                var customers = new Bloodhound({
                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace("name"),
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: "/api/customers?query=%QUERY",
                        wildcard: "%QUERY"
                    }
                });

                $("#customer")
                    .typeahead({
                        minLength: 3,
                        highlight: true
                    },
                    {
                        name: "customers",
                        display: "name",
                        source: customers
                    })
                    .on("typeahead:select",
                        function(e, customer) {
                            vm.customerId = customer.id;
                        });

                var movies = new Bloodhound({
                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace("name"),
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: "/api/movies?query=%QUERY",
                        wildcard: "%QUERY"
                    }
                });

                $("#vehicle")
                    .typeahead({
                        minLength: 3,
                        highlight: true
                    },
                    {
                        name: "vehicles",
                        display: "name",
                        source: movies
                    })
                    .on("typeahead:select",
                        function(e, movie) {
                            $("#vehicles").append("<li class='list-group-item'>" + vehicle.Make + " " + vehicle.Model + "</li>");

                            $("#vehicle").typeahead("val", "");

                            vm.vehicleIds.push(vehicle.id);
                        });

                $.validator.addMethod("validCustomer",
                    function() {
                        return vm.customerId && vm.customerId !== 0;
                    },
                    "Please select a valid customer.");

                $.validator.addMethod("atLeastOneVehicle",
                    function() {
                        return vm.movieIds.length > 0;
                    },
                    "Please select at least one vehicle.");

                var validator = $("#newTestDrive")
                    .validate({
                        submitHandler: function() {

                            $.ajax({
                                    url: "/api/newTestDrive",
                                    method: "post",
                                    data: vm
                                })
                                .done(function() {
                                    toastr.success("Test drive successfully recorded.");

                                    $("#customer").typeahead("val", "");
                                    $("#vehicle").typeahead("val", "");
                                    $("#vehicles").empty();

                                    vm = { vehicleIds: [] };

                                    validator.resetForm();
                                })
                                .fail(function() {
                                    toastr.error("Something unexpected happened.");
                                });
                            return false;
                        }
                    });
            })
    </script>
}
